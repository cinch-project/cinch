services:
    _defaults:
        autowire: true
        public: false

    _instanceof:
        Cinch\Command\Handler:
            public: true
            calls:
                -   setLogger: [ '@Psr\Log\LoggerInterface' ]
                -   setEventDispatcher: [ '@Psr\EventDispatcher\EventDispatcherInterface' ]
        Cinch\Console\Query\QueryHandler:
            public: true
            calls:
                -   setLogger: [ '@Psr\Log\LoggerInterface' ]

    Cinch\:
        lazy: true
        resource: '../src/'
        exclude:
            - '../src/helpers.php'
            - '../src/Common/'
            - '../src/Component/'
            - '../src/Console/Command/'
            - '../src/Project/'

    Psr\EventDispatcher\EventDispatcherInterface:
        public: true
        class: Symfony\Component\EventDispatcher\EventDispatcher

    # created by Cinch\Console\Application, needed since logger instance is set on container pre-compile.
    Psr\Log\LoggerInterface:
        public: true

    Cinch\Database\SessionFactory: ~
    Cinch\Project\ProjectRepository:
        class: Cinch\Console\ConsoleProjectRepository

    Cinch\History\HistoryFactory:
        arguments:
            $application: 'cinch-cli/%cinch.version%'

    Cinch\MigrationStore\MigrationStoreFactory:
        arguments:
            $projectDir: '%project.dir%'
            $resourceDir: '%cinch.resource_dir%'
            $userAgent: 'cinch-cli/%cinch.version%'

    Cinch\History\SchemaVersion:
        arguments:
            - '%schema.version%'
            - '%schema.description%'
            - '%schema.release_date%'

    Twig\Loader\LoaderInterface:
        class: Twig\Loader\FilesystemLoader
        arguments:
            - '%twig.template_dir%'

    Twig\Environment:
        arguments:
            $options:
                autoescape: false
                strict_variables: true
                auto_reload: '%twig.auto_reload%'
                debug: '%twig.debug%'

    Cinch\Console\ContainerHandlerLocator:
        arguments:
            - '@service_container'

    League\Tactician\Handler\CommandNameExtractor\ClassNameExtractor: ~
    League\Tactician\Handler\MethodNameInflector\HandleInflector: ~
    League\Tactician\Handler\CommandHandlerMiddleware:
        arguments:
            - '@League\Tactician\Handler\CommandNameExtractor\ClassNameExtractor'
            - '@Cinch\Console\ContainerHandlerLocator'
            - '@League\Tactician\Handler\MethodNameInflector\HandleInflector'

    League\Tactician\CommandBus:
        public: true
        arguments:
            - [ '@League\Tactician\Handler\CommandHandlerMiddleware' ]