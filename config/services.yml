services:
    _defaults:
        autowire: true
        public: false

    _instanceof:
        Cinch\Command\CommandHandler:
            public: true

        Symfony\Component\EventDispatcher\EventSubscriberInterface:
            tags: [ 'subscriber' ]

    Cinch\:
        lazy: true
        resource: '../src'
        exclude: [ '../src/helpers.php' ]

    #    Cinch\Console\Application:
    #        public: true
    #        arguments:
    #            $version: '%cinch.version%'

    # log.file points to a temp file during create. inject path so it can be moved to projectDir after create
    #    Cinch\Console\Commands\Create:
    #        arguments:
    #            $tempLogFile: '%log.file%'

    #    log.time_zone:
    #        class: DateTimeZone
    #        arguments:
    #            - '%log.time_zone%'

    #   log.formatter:
    #       class: Monolog\Formatter\LineFormatter
    #       arguments:
    #           $dateFormat: 'Y-m-d\TH:i:sO'
    #           $ignoreEmptyContextAndExtra: true

    #    log.stream_handler:
    #        public: true
    #        class: Monolog\Handler\StreamHandler
    #        arguments:
    #            $stream: '%log.file%'
    #        calls:
    #            -   setFormatter: [ '@log.formatter' ]

    #    log.noop_handler:
    #        public: true
    #        class: Monolog\Handler\NoopHandler

    #    logger:
    #        public: true
    #        class: Monolog\Logger
    #        arguments:
    #            $name: '%project.name%'
    #            $handlers:
    #                - "@=parameter('log.enabled') ? service('log.stream_handler') : service('log.noop_handler')"
    #            $timezone: '@log.time_zone'

    Psr\Log\LoggerInterface: '@logger'

    Cinch\Console\ConsoleProjectRepository: ~
    Cinch\Project\ProjectRepository:
        public: true
        class: Cinch\Console\ConsoleProjectRepository

    Cinch\Command\DataStoreFactory:
        arguments:
            $application: 'cinch-cli/%cinch.version%'

    Cinch\History\SchemaVersion:
        arguments:
            - '%schema.version%'
            - '%schema.description%'
            - '%schema.release_date%'

    Cinch\MigrationStore\MigrationStoreFactory:
        arguments:
            $projectDir: '%project.dir%'
            $resourceDir: '%cinch.resource_dir%'
            $userAgent: 'cinch-cli/%cinch.version%'

    Twig\Loader\LoaderInterface:
        class: Twig\Loader\FilesystemLoader
        arguments:
            - '%twig.template_dir%'

    Twig\Environment:
        public: true
        arguments:
            $options:
                autoescape: false
                strict_variables: true
                auto_reload: '%twig.auto_reload%'
                debug: '%twig.debug%'

    Cinch\Console\ContainerHandlerLocator:
        arguments:
            - '@service_container'

    League\Tactician\Handler\CommandNameExtractor\ClassNameExtractor: ~
    League\Tactician\Handler\MethodNameInflector\HandleInflector: ~
    League\Tactician\Handler\CommandHandlerMiddleware:
        arguments:
            - '@League\Tactician\Handler\CommandNameExtractor\ClassNameExtractor'
            - '@Cinch\Console\ContainerHandlerLocator'
            - '@League\Tactician\Handler\MethodNameInflector\HandleInflector'

    League\Tactician\CommandBus:
        public: true
        arguments:
            - [ '@League\Tactician\Handler\CommandHandlerMiddleware' ]